<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.mapper.EmployeeMapper2">


    <!--
    自定义表字段名称与JavaBean属性的映射
    type: JavaBean类型
    id: resultMap唯一标识，方便被引用
    -->
    <resultMap id="employeeMap" type="com.mybatis.entity.Employee">
        <!--
        指定主键列的封装规则
        column: 表字段名称
        property: JavaBean类型属性
        -->
        <id column="id" property="id"/>
        <!-- 定义普通列封装规则 -->
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--不在此处配置的列，会自动映射，但如果使用resultMap,建议把所有列都配置出来-->

    </resultMap>

    <select id="getEmployeeByGenderReturnMap" resultMap="employeeMap">
        select *
        from employee t
        where t.gender = #{gender}
    </select>

    <!--通过级联属性的方式进行联合查询-->
    <resultMap id="empDeptMap" type="com.mybatis.entity.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <result column="did" property="dept.id"/>
        <result column="department_name" property="dept.name"/>
    </resultMap>

    <select id="getEmpAndDept" resultMap="empDeptMap">
        select t.id, t.last_name, t.email, t.gender, d.id did, d.department_name
        from employee t,
             department d
        where t.id = #{id}
          and t.department_id = d.id
    </select>

    <!--
    使用association进行级联查询
    association只能关联查询单个对象
    -->
    <resultMap id="empDeptMap2" type="com.mybatis.entity.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--
        association 可以指定联合的JavaBean对象
        property="dept"指定哪个属性是联合的对象
        javaType指定这个联合对象的Java类型
        -->
        <association property="dept" javaType="com.mybatis.entity.Department">
            <!-- column="did" 一个resultMap里面列名不能重复 -->
            <id column="did" property="id"/>
            <result column="department_name" property="name"/>
        </association>

    </resultMap>

    <select id="getEmpAndDept2" resultMap="empDeptMap2">
        select t.id, t.last_name, t.email, t.gender, d.id did, d.department_name
        from employee t,
             department d
        where t.id = #{id}
          and t.department_id = d.id
    </select>


    <!--使用association进行分步查询-->
    <resultMap id="empDeptBySteps" type="com.mybatis.entity.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--
        1.先根据员工id查询到员工信息
        2.再根据员工信息中的d_id查询部门信息
        3.再将部门信息封闭到员工对象中
        select：表示当前关联的对象是调用指定的方式查询出来的结果
        column="department_id":指定传入select中方法的参数，此参数来自于第一个方法“getEmpById”中查询的结果集里面
        -->
        <association property="dept" javaType="com.mybatis.entity.Department"
                     select="com.mybatis.dao.mapper.DepartmentMapper.getDeptById" column="department_id"/>
    </resultMap>

    <select id="getEmpById" resultMap="empDeptBySteps">
        select * from employee t where t.id = #{id}
    </select>


    <!--
      discriminator
      鉴别器
      mybatis可以根据discriminator判断某列的值，根据值来改变封装行为
      封装employee
      1.如果查询出来的是女生，则把对应的部门信息查询出来，否则不查询
      2.如果查询出来的是男生，则把lastName这一列赋值到email上
      -->
    <resultMap id="empDeptByStepsWithDiscriminator" type="com.mybatis.entity.Employee">
        <id column="id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--如果查询出来的是女生，则把对应的部门信息查询出来，否则不查询-->
        <discriminator javaType="String" column="gender">
            <case value="F" resultType="com.mybatis.entity.Employee">
                <association property="dept" select="com.mybatis.dao.mapper.DepartmentMapper.getDeptById"
                             javaType="com.mybatis.entity.Employee"
                             column="department_id" fetchType="eager"/>
            </case>

            <!--如果查询出来的是男生，则把lastName这一列赋值到email上-->
            <case value="M" resultType="com.mybatis.entity.Employee">
                <id column="id" property="id"/>
                <result column="last_name" property="lastName"/>
                <result column="last_name" property="email"/>
                <result column="gender" property="gender"/>
            </case>
        </discriminator>
    </resultMap>

    <select id="getEmpByIdwithDiscriminator" resultMap="empDeptByStepsWithDiscriminator">
        select * from employee
    </select>


</mapper>
